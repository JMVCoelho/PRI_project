firstly aside agree weakness exists lot trouble believing represents difficulty real lifegiven purpose one time pad give unbreakable security expense key distribution etc imply clients really want level securitypeople want keep p secret find hard believe eve might happen copy p lying aroundaware argument applies eve knowing even small part message eve must know exactly bytes c known susequence starts result garbledfind least surprisingback question resources use one time pad transmissions would also append message authentication code message using next bits one time pad key perhapsoriginal question basically asked whether way authenticate message degree security pad provided know answerhowever would propose following discussionalice bob arbitrary number secret random bits share eve knowfinds effectively knowing p corresponding c fact correspond causes problemmessage authentication code created using one time pad operation eve could know parts mac affected parts input would unable forge mac correspondrequired non linear combiner parts messagenon linear simply xoring subtracting whatever exactly effectend encrypted message c alice appends n bit mac computed follows means next full chunk one time pad compute c p xor pad n bit boundary break c n bit chunks set mac initialisation vector chunk sequentially set mac mac nlop c end process mac message authentication codebob verifies mac obvious manner recovers plaintext p uses pad reproduce mac mannernlop non linear operator rubsimplest non linear operator think box fixed even published permutation n bit integers indexable table called sbox use x nlop x xor sboxpractically speaking think solves problem eve never sees intermediate output c hence deduce perform valid substitutionalso practically speaking want mac fairly large say bits might want gigabyte say box might work byte sized boxes think irrelevant detail discussion handfirst point errors give pointer literature