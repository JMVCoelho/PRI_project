archive name xt faq version id faq xt v ware exp x toolkit intrinsics f q monthly posting article contains answers frequently asked questions faq comp windows x x toolkit intrinsicssubmit questions preferably answer send email ware cis ohio state edu many faqs including one available archive site rtfm mit edu directory pub usenet news answersname faq archived appears archive name line top articlefaq archived xt faqcode fragments public domaincontentsxt glossarysoftware versionsrelated faqapplication core dump use signals alarms cthreadsuse different visual defaultvisual application useshell widgets visualvisual depth colormap shells inheritdone still get badmatch errorwidget get destroyed call xtdestroywidgetexit still execute destroycallbacksresize shell widgetxtappaddinput handle filesgood books magazines xtwidgets availablealternatives intrinsicspass float value xtsetvalueswrite resource converteropen multiple displayschanged r r rresources loadedorder callbacks executedknow widget visiblereparent widget xt extreparentwidgetuse xtmalloc xtfree etcdebug xt applicationxtaddinput xtaddtimeout xtaddworkproc workimplement drag dropxt glossary xt intrinsics implement object oriented interface c code allow useful graphical components createdincluded classes provide base functionality object rectobj core composite constraint shell overrideshell wmshell etcterms xt intrinsics used interchangeably however used precisely mean specific library x window systemparticular include athena motif olit widget setwithout widgets intrinsics especially usefulwidget refers user interface abstraction created via xtprecise use object subclass core classused loosely refer anything subclass object class although accurately called windowless widgets gadgetsxlib c interface x protocolone layer xt intrinsicstypically widget uses relatively xlib functions xt provides services although understanding xlib helps problemssoftware versions following latest versions xt based software _____________________________________________________________ software version released next expected _____________________________________________________________ xr patch none xr patchathena widgets see xr motifolitxtraxw xr none xcu xr none fwf _____________________________________________________________related faq david b lewis uunet craft faq maintains faq xposted monthly comp windows x located export contrib faqliam r e quin lee sq sq com posts faq list open look comp windows xjan newmarch jan pandonia canberra edu au posts faq list motif comp windows x motifpeter ware ware cis ohio state edu posts faq list comp windows x intrinsics export contrib faq xtapplication core dump use signals alarms cthreadsbrief xlib xt widget sets mutual exclusion critical sectionsinterrupt handler likely leave one libraries inconsistent state appropriate flags yet set dangling pointers middle list traversal etcnote ansi c standard points behavior signal handler undefined signal handler calls function signal problem specific xlib xt posix specification mentions functions may called safely may assumed functions called xlib xt functionssafe way deal signals set flag interrupt handlerflag later needs checked either work procedure timeout callbackincorrect add either interrupt handleranother note dangerous add work procedure never finisheseffectively preempts work procedures previously added never calledanother option open pipe tell event loop read end using xtappaddinput signal handler write byte write end pipe signalhowever could deadlock process pipe fillsintrinsics deal problemprimarily supposed portable layer hardware operating systemgood enough reason thinknote article x journal example reilly volume erroruse different visual defaultrequires complicated answerwindow three things visual specific visual colormap border pixmapwidgets colormap borderpixmap resource shell widgets visual resources another questions deals shells visualdefault value resources copyfromparent exactly saysshell widget copyfromparent gets evalulated defaultvisualofscreen defaultcolormapofscreenone three resources properly set badmatch error occurs window createdproperly set values depends visual usedget worktwo parts answerfirst want application start particular visual second want particular shell within application start different visualsecond actually easier basic information need availablefirst little harder need initialize much toolkit order determine needed informationsample code start application using something default visualcompile cc g visual c visual lxaw lxmu lxt lxext lx lm run visual geometry x depth visual staticcolor fg blue bg yellow need move mouse get particular visuals colormap installinclude x intrinsic h include x stringdefs h include x shell h typedef struct visual visual int depth optionsrec optionsrec options xtresource resources visual visual xtrvisual sizeof visual xtoffsetof optionsrec visual xtrimmediate null depth depth xtrint sizeof int xtoffsetof optionsrec depth xtrimmediate null xrmoptiondescrec desc visual visual xrmoptionseparg null depth depth xrmoptionseparg null int main argc argv int argc char argv xtappcontext app application context widget top toplevel widget display dpy display char xargv saved argument vector int xargc saved argument count colormap colormap created colormap xvisualinfo vinfo template find visual xvisualinfo vinfo_list returned list visuals int count number matchsarg args cardinal cnt char name test char class test save command line arguments xargc argc xargv char xtmalloc argc sizeof char bcopy char argv char xargv argc sizeof char following creates _dummy_ toplevel widget retrieve appropriate visual resourcecnt top xtappinitialize app class desc xtnumber desc argc argv string null args cnt dpy xtdisplay top cnt xtgetapplicationresources top options resources xtnumber resources args cnt cnt options visual options visual defaultvisualofscreen xtscreen top xtsetarg args cnt xtnvisual options visual cnt create appropriate colormapcould use default colormap based class visual could examine property rootwindow find right colormap could sorts things colormap xcreatecolormap dpy rootwindowofscreen xtscreen top options visual allocnone xtsetarg args cnt xtncolormap colormap cnt find information visualvinfo visualid xvisualidfromvisual options visual vinfo_list xgetvisualinfo dpy visualidmask vinfo count vinfo_list count xtsetarg args cnt xtndepth vinfo_list depth cnt xfree xpointer vinfo_list xtdestroywidget top create real toplevel widgetxtsetarg args cnt xtnargv xargv cnt xtsetarg args cnt xtnargc xargc cnt top xtappcreateshell char null class applicationshellwidgetclass dpy args cnt display application loop handling eventsxtrealizewidget top xtappmainloop app returnvisual application usepoint argued one opinion way application know appropriate visual specified userdisagree application probably falls category always using default visual hardware specific expects particular visual bit truecolor overlayplane extensionapplication runs isolationdepending way server allocates resources may always want application run truecolor mode going mess applicationsmay upset chooses run greyscale instead psuedocolor monochromeexample low end color sun server many different possible visuals monochrome entry colormap static gray static color truecolorsgi iris offer plus bit truecolor bit truecolor overlay planeshell widgets visualstrictly conventionmakes possible arbitrary widget know visual uses found looking shell widget ancestor obtaining visual shellwidget visual resourcemust realize method use visual calls xcreatewindowalso make resource obtained xtgetvalues widgets findreasonable value probably xtnvisualvisual depth colormap shells inheritdefault value resources set copyfromparentinterpreted defaultcolormapofscreen defaultdepthofscreen default visual screen widget parent eapplicationshellwidgetclass root widget treeparent widget null shell copies colormap depth parent uses copyfromparent visualdone still get badmatch errorresource converters improperly cache referencesespecially true xr earlier versions motifwidget get destroyed call xtdestroywidgetsee section xt specificationeventually get destroyed immediatelyintrinsics destroy widget two phase processfirst children flag set indicate destroyedput list widgets destroyedway pending x events references widget cleaned memory actually freedsecond phase performed callbacks event handlers actions completed checking next x eventpoint list traversed widget memory actually free among thingscaveats trivia widgets may destroyed intrinsics determine references widgets listphase destruction occurs immediatelyalso nested event loops used widgets placed destroy list entering inner event loop destroyed returning outer event loopexit still execute destroycallbacksproblem simple entirely reasonable approach exiting application used calling exit directly widget may chance clean external state open sockets temporary files allocated x resources etccode simplicity reasons assumes single toplevel widget widget toplevelget gw widget gw widget find toplevel widget top top gw xtparent top top xtparent top empty return top void exitcallback gw closure call_data widget gw widget xtpointer closure data app specified xtpointer call_data widget specific data widget toplevel toplevel toplevelget gw xtunmapwidget toplevel make disappear quickly xtdestroywidget toplevel exit one see code exit immediately destroying toplevel widgettrouble phase destruction may never occurworks widgets applications work widgets external statemight think since works always work remember part reason object oriented approach used one ignorant implementation details widgetmeans widget may change someday require external state cleaned destroy callbacksone alternative modify exitcallback set global flag test flag private event loophowever private event loops frowned upon tends encourage sloppy difficult maintain practicestry following code insteadinclude x intrinsic h extern widget toplevelget needfunctionprototypes widget gw endif extern boolean exitworkproc needfunctionprototypes xtpointer closure endif extern void exitcallback needfunctionprototypes widget gw xtpointer closure xtpointer call_data endif widget toplevelget gw widget gw widget find toplevel widget top top gw xtparent top top xtparent top empty return top void exitcallback gw closure call_data widget gw widget xtpointer closure data app specified xtpointer call_data widget specific data widget toplevel toplevel toplevelget gw xtunmapwidget toplevel make disappear quickly xtdestroywidget toplevel xtappaddworkproc xtwidgettoapplicationcontext gw exitworkproc xtpointer null boolean exitworkproc closure xtpointer closure exit notreached exitcallback adds work procedure get called application next idle happens events processed destroy callbacks executedresize shell widgetrealized one resize shell widgetproper thing resize currently managed child shell widget using xtsetvaluesgeometry change propagated shell asks window manager may may allow requesthowever shell must resource xtnallowshellresize set true otherwise even ask window manager grant request shell resizechange position shell use xtsetvalues shell child within limits window manager grantedxtappaddinput handle fileshowever unix semantics ready file fit peoples intuitive modelunix terms file descriptor ready reading whenever read call would block ignoring setting optional flags indicate blockworks expected terminals sockets pipesfile read always return return indicates eof edataresult code intrinsics always calls input handler always thinks something readculprit select system call sysv based os poll system callget around unix systembest approach use another process check available input fileuse pipe connect application process pass file descriptor pipe xtappaddinputsuitable program bsd systems tail f filenamerumored select systems _completely_ reliableparticular ibm aix one would work several thousand times stop event wokeseemed result race condition kernelibm claims fixpyramid workultrix possibly others pipes implemented sockets completely broken although writing side wrote byte blocks reading side received broken put pipe byte timewaste lot time reading small blocks get raound detecting situation select ignore pipe mseconds given whole blocknote descriptions used unix terminology read file descriptor pipes etcos dependent area may identical systemshowever intrinsic designers felt common enough operation included part toolkitalso deal signals point knowgood books magazines xtfavorite definitive referenceperspective offers reasonable introduction also goes full details intrinsicsstarted using already familiar xt concepts behind newcomers may may find usefulalways found accurate complete means pagesasente paul j swick ralph r x window system toolkit complete programmer guide specification digital press isbn order number ey ee dp prentice hall isbnalso available dec direct digitalbook commonly recomend novices young dougx window system applications programming xt motif version prentice hall isbnisbn course reilly entire series manuals x xtreilly orderingparticular volume xt reference done manual page stylerd edition extensively overhauled goes far beyond mit manual pagesfinding usefulparticular permutted index references manual pages help great deal chasing related informationread two periodicals x resource x journaltwo dealing specifically xx resource published quarterly reilly one issues mit x consortium technical conference proceedingsadvertisingfound informative pretty good depthorders call email cathyr ora comeditorial matters email adrian ora comtable contents posted math utah edu ftp pub tex bib tex form ftp uu net ftp published oreilly xresource ascii formx journal bimonthly trade rag lots advertisingarticles informative oriented toward less technical audienceread see going expectation learning great deal remember represent fairly small percentage peoplealso pretty good collection people advisory board columnistscallwidgets availablethree popular widget sets athena set provided xsufficient purposes ugly siderecently look available ftp export lcs mit edu contrib xawd tar zmotif osf available license fee commonly shipped many workstation vendors platforms almost everyone sunlooks good works well personally think poorly implementedolit open look intrinsics toolkit set widgets implementing sun open look specificationdevelopednever used comment qualityheard rumours pain actually getaddition following collection widgets also available xtra library widgets sale graphical software technologyincludes bar graph stacked bar graph line graph pie chart xy plot hypertext help spreadsheet data entry form widgetsnever seen commentfwf free widget foundation attempting collect set freely available widgetsincluded pixmap editor filedialog otherscurrent set widgets obtained via anonymous ftp machine cs uiuc edu file pub fwf shar zxcu cornell university widgets gene dykesone early widget sets releasedprovides nice appearance buttons mini command languageprobably widely usedxs sony widget setaround r days seemed disappearlooked like promisexw hp widgetsprecursor motiforiginally written r exists diffs get work r rpretty good widget set less diedprecursor xray toolkit originally implemented xr apparently provided much experience designers xtxo widget set workingstill primitive give try archive cis ohio state edu pub xo following specialized widgets also available tbl implements tabular layout widgetssupports motif widgets childrenpart wclplots athena plotting widgets athena widgetscontact gnb bby oz au joe athena mit edualternatives intrinsics__________________________________________ name language vendor __________________________________________ xview c sun oi c parcplace interviews c stanford tcl tk c sprite berkeley edu __________________________________________ however much like c admire skill designing implementing intrinsics hopefully alternative develop next years uses object oriented languagekeep eyes open expect change time language c _starts_ gaining acceptancepass float value xtsetvaluesfirst going wrong structure arg essentially typdef struct string name long value arg code arg arg xtsetarg arg name expands arg arg arg name name arg value see normal c type conversions arg value gets integer instead floating point valuevalue copied widget resource bit pattern wildly different required floating point valueget aroundfollowing macro athena widgets document recomending previous suggestionsdefine xtsetfloatarg arg n sizeof float sizeof xtargval xtsetarg arg n else xtargval ld xtargval xtsetarg arg n ldwrite resource convertercourtesy rich thomson rthomson dsd es com following discussion resource converters assumes r r intrinsicsresource converters changed r r allow destructors caching converted valuesseveral main types resource converters string data type data type string data type data type string data type usually string data type converter fixed set strings converted data type valuesoften used map enumerated names enumerated values name value true false case string data type converter needs compare resource value list fixed stringsreadily accomplished use quark mechanism resource managerresource value turned quark unique representation string fits single wordresource quark compared quarks fixed strings representing enumerated valuesmany enumerated strings converter many converters small number enumeration strings global initialization routine might used turn resource strings quarksway first time one converters used strings turned quarks held static variables use next invocation one convertersii data type string type converter slightly easier string data type converters since use quarks necessaryinstead data type value simply converted string value probably use sprintfdata type string converters useful applications wish convert internal data type value string write valid resource specification filemechanism used provide snapshot application state filesnapshot used restore program known state via usual x resource database mechanismstaking trouble write string data type converter much extra effort write data type string converterwriting time helps ensure consistentiii data type data type type converter used convert existing data type value another data typeinstance x pixel value converted rgb data type contains separate fields red green bluetype signature resource converter follows typedef boolean xttypeconverter display xrmvalueptr cardinal xrmvalueptr xrmvalueptr xtpointer display dpy xrmvalueptr args cardinal num_args xrmvalueptr fromval xrmvalueptr toval xtpointer converter_data converter invoked fromval argument points source x resource manager value toval argument points destination x resource manager valueconverter_data argument opaque pointer converter specific data specified converter registeredargs num_args arguments allow extra information passed converter invokedinstance pixel rgb structure converter discussed would need colormap visual arguments lookup pixel obtain rgb values corresponding pixelcare must taken toval argumentxrmvalue following type definition specifies size location converted value typedef struct unsigned int size caddr_t addr xrmvalue xrmvalueptr converter invoked address may point location given size converted value location nullformer case converter ensure size destination area large enough handle converted valuedestination area large enough converter set size amount space needed return falsecaller ensure enough space allocated reinvoke convertersize large enough converter simply copy converted value space given return truelocation null converter assign location address static variable containing converted value return truewriting group converters code often repeated becomes convenient define macro define done var type toval addr toval size sizeof type toval size sizeof type return false else type toval addr var else toval addr caddr_t var toval size sizeof type return true define donestr str toval addr toval size sizeof string toval size sizeof string return false else toval addr caddr_t str toval size sizeof string return true inside converter good idea perform little safety checking num_args args arguments ensure converter called properlywritten converter need register intrinsicsintrinsics invokes resource converters creating widgets fetching resource values resource databaseregister converter single application context use xtappsettypeconverter void xtappsettypeconverter context converter args num_args cache destructor xtappcontext context string string xttypeconverter converter xtconvertarglist args cardinal num_args xtcachetype cache xtdestructor destructor register converter application contexts use xtsettypeconverter void xtsettypeconverter converter args num_args cache destructor string string xttypeconverter converter xtconvertarglist args cardinal num_args xtcachetype cache xtdestructor destructor r intrinsics routines xtappaddconverter xtaddconverter superseded xtappsettypeconverter xtsettypeconverterwhenever possible newer routines usedconverter registered intrinsics cache argument specifies converted resource values cached xtcachenone cache converted values xtcacheall cache converted values xtcachebydisplay cache converted values per display basis caching converted values require round trip server good idea instance string pixel conversionsdestructor argument routine invoked resource destroyed either cached reference count decremented zero widget owning value destroyedxtdestructor following type definition typedef void xtdestructor xtappcontext xrmvalueptr xtpointer xrmvalueptr cardinal xtappcontext context xrmvalueptr xtpointer converter_data xrmvalueptr args cardinal num_args destructor invoked free auxiliary storage associated argument actually free storage pointed argument addrdestructor passed extra arguments passed converter conversion performed instance colormap visual arguments string pixel converter since destructor would need free allocated pixel colormap well private data passed converter registeredsample converter code found following files mit r distribution mit lib xt converters c contrib lib pext converters c contrib lib pext converters hopen multiple displayssee multi user application software using xt x resource issue summer oliver jones complete coverage issues involvedanswer based articlenutshell one uses xtopendisplay add display _single_ application context xtclosedisplay shutdown display remove application contextreal problems occur trying close displayhappen waysuser selects quit button one displaysuser window manager send wm_delete_window messageserver disconnect possibly killclient message server shutdown crash network failureassume deal gracefully since _merely_ problem translating widget display removing displayread oliver jones articlethird one difficult handlefollowing based oliver jones article include difficult problemdifficulty arises xlib design presumed error always unrecoverable fatalessentially true single display x based application true multiple display program application things display information x serverx error occurs error handler called _if_ returns exit happensway around use setjmp longjmp avoid returning error handlerfollowing code fragment demonstrates include setjmp h jmp_buf xiorecover void xiohandler dpy display dpy destroydisplay dpy longjmp xiorecover main setjmp xiorecover xsetioerrorhandler xiohandler xtappmainloop app_context destroydisplay something given display pointer go back application specific data perform necessary cleanupalso call xtclosedisplayunfamiliar setjmp longjmp setjmp first called returns save enough information jmp_buf latter execution longjmp return program state setjmp executedreturn value second setjmp value second argument longjmpseveral caveats using purpose adequateproblems might run resource converters improperly cache resourceslikely symptoms xlib errors badcolor badatom badfontmay problems total number displays open since typically limited number file descriptors available typical valuemay also run authorization problems trying connect displaymuch discussion comp windows x topic novemberrobert scheifler posted article basically said way xlib changechanged r r raddresses changes intrinsicsfirst general changes release describedcertainly incomplete list new functions added others deprecated listedbrevity primary goalmuch following information retrieved chapter mit xt intrinsics manual reilly volume rd editionr r addition gadgets windowless widgets new resource type converter interface handle cacheing additional datavariable argument list interfacedefine xtspecificationrelease added release wmshellpart toplevelshellpart transientshellpart changed incompatiblycore initialize core set_values added arglist count parameters event handlers continue_to_dispatch parameter added core set_values_almost specification changedcore compress_exposure changed enumerated data type boolean core class_inited changed enumerated data type boolean constraint get_values_hook added extension record core initialize_hook obsolete info passed core initialize shell root_geometry_manager added extension record core set_values_hook obsolete info passed core set_values calling xtquerygeometry must store complete geometryadded unrealizecallbackxttranslatecoords actually works rr r psuedo resource basetranslation addedsearching app default files made flexible customization resource addedper screen resource databasesupport permanently allocated stringspermanetly allocated strings required several class fieldsargs argument xtappinitialize xtvaappinitialize xtopendisplay xtdisplayinitialize xtinitialize changed cardinal int many performance improvements summarized article xt performance improvements release gabe beged dov x resource issue xrmstringtoquark augmented xrmpermstringtoquark avoid string copiesseveral fields class record indicated needing permanent stringsusing array strings resources callback lists redesigned use less memory translation manager redesigned rewritten takes less memory translation tables merges faster cache action bindings keycode keysyms cachedbetter sharing gc modifiable fields window widget translation uses less space faster malloc space widget name since quark available widget space allocated include constraints several example programs reduction memory usagefunctions new r xtallocategc sharable gc modifiable fields xtgetactionlist get action table class xtscreendatabase return resource database screen xtsetlanguageproc register language procedure called set locale functions new r xtappaddactionhook procedure call _every_ actionxtappinitialize lots initialization workxtappreleasecacherefs decrement cache reference count converter xtappsetfallbackresources specify default resources xtappsettypeconverter register new style converter xtcallcallbacklist directly execute callback list xtcallconverter invoke new style converter xtcallbackreleasecacheref release cached resource value xtcallbackreleasecachereflist release list cached resource values xtconvertandstore find call resource converter xtdirectconvert invoke old style converter xtdisplayofobject return display xtdisplaystringconversionwarning issue warning conversion xtfindfile find file xtgetactionkeysym retrieve keysym modifies action xtgetapplicationnameandclass return name class xtgetconstraintresourcelist get constraints widget xtgetkeysymtable return keycode keysym mapping table xtgetmulticlicktime read multi click time xtgetselectionrequest retrieve selectionrequest event xtgetselectionvalueincremental obtain selection value incrementally xtgetselectionvaluesincremental obtain selection value incrementally xtinitializewidgetclass initialize widget class manually xtinserteventhanlder register event handler others xtinsertraweventhandler register event handler without modify input mask xtisobject test subclass object xtisrectobj test subclass rectobj xtkeysymtokeycodelist return list keycodes xtlasttimestampprocessed retrieve recent event time xtmenupopdown action popping widget xtmenupopup action popping widget xtoffsetof macro structure offsets xtownselectionincremental make selection data availabe incrementally xtpoupspringloaded map spring loaded popup xtregistergrabaction indicate action procedure needs passive grab xtremoveactiohhook remove function called every action xtresolvepathname find file xtscreenofobject return screen objectxtsetmulticlicktime set multi click time xtsetwmcolormapwindows set wm_colormap_windows custom colormaps xtungrabbutton cancel passive button grab xtungrabkey cancel passive key grab xtungrabkeybard release active keyboard grab xtungrabpointer release active pointer grab xtva varags interfaces bunch functions xtwindowofobject return window nearest widget ancestor deprecated replacement xtaddactions xtappaddactions r xtaddconverter xtappaddconverter r xtaddinput xtappaddinput r xtaddtimeout xtappaddtimeout r xtaddworkproc xtappaddworkproc r xtconvert xtconvertandstore r xtcreateapplicationshell xtappcreateshell r xtdestroygc xtreleasegc r xterror xtapperror r xtgeterrordatabase xtappgeterrordatabase r xtgeterrordatabasetext xtappgeterrordatabasetext r xtgetselectiontimeout xtappgetselectiontimeout r xtinitialize xtappinitialize r xtmainloop xtappmainloop r menupopdown action xtmenupopdown action r menupopup action xtmenupopup action r xtnextevent xtappnextevent r xtpeekevent xtapppeekevent r xtpending xtapppending r xtseterrorhandler xtappseterrorhandler r xtseterrormsghandler xtappseterrormsghandler r xtsetselectiontimeout xtappsetselectiontimeout r xtsetwarninghandler xtappsetwarninghandler r xtsetwarningmsghandler xtappsetwarningmsghandler r xtwarning xtappwarning r xtwarningmsg xtappwarningmsg rresources loadedresources widget filled following places highest priority lowest priorityargs passed creation timecommand line argumentsuser per host defaults fileuser defaults fileuser per application default filesystem wide per application default filenote read application startupresult steps single resource database used queriesper host defaults file contains customizations applications executing specific computerfile either specified xenvironment environment variable set file home xdefaults host useduser defaults file either obtained resource_manager property root window display set file home xdefaults usedtypically program xrdb used set resource_manager propertyplease note kept relatively small client connects display must transfer propertysize around kbyte reasonabletoolkits may track changes resource_manageruser may many per application default files containing customizations specific applicationintrinsics quite flexible file foundread next part describes various environment variables effect file foundsystem wide per application default files typically found usr lib x app defaultsfile found fallback resources usedintrinsics quite flexible file foundread next part describes various environment variables effect file foundthanks oliver jones oj pictel com following use several environment variables control resources loaded xt based programs xfilesearchpath xuserfilesearchpath xapplresdirenvironment variables control xt looks application defaults files application initializingxt loads one app defaults file path defined xfilesearchpath another path defined xuserfilesearchpathset xfilesearchpath software installed system way app defaults files appear several different directory hierarchiessuppose example running sun open windows also r x applications installed usr lib x app defaultscould set value like xfilesearchpath would cause xt look app defaults files usr lib x usr openwin lib wherever openwinhome located setenv xfilesearchpath usr lib x n openwinhome lib n value environment variable colon separated list pathnamespathnames contain replacement characters follows see xtresolvepathname n value filename parameter application class namevalue file typecase literal string app defaults c customization resource r suffixnone app defaultsl language locale codeset e gja_jp euc l language part l e gja territory part display language string c codeset part display language string let take apart examplesuppose application class name mytermalso suppose open windows installed usr openwinnotice example omits locale specific lookupusr lib x n means usr lib x app defaults myterm openwinhome lib n means usr openwin lib app defaults myterm application initializes xt tries open app defaults files order shownsoon finds one reads uses stops looking otherseffect path search first usr lib x usr openwinlet consider another exampletime let set xuserfilesearchpath looks file myterm ad current working directory myterm directory app defaultssetenv xuserfilesearchpath n ad home app defaults n first path list expands myterm adsecond expands home app defaults mytermconvenient setting debugging follows imake convention naming app defaults file myterm ad application source directory run application directory working still resources loaded properlynote looking app default files xuserfilesearchpath bizarre reason neither type file suffix defined uselessr another twistmay specify customization resource valueexample might run myterm application like myterm xrm customization color one pathname specifications value usr lib x app defaults n c expanded pathname would usr lib x app defaults myterm color c substitution character takes value customization resourcedefault xfilesearchpath compiled xt usr lib x l n c r usr lib x l n c r usr lib x n c r usr lib x l n usr lib x l n usr lib x n note sites replace usr lib x projectroot batch default settingsdefault xuserfilesearchpath also compiled xt root l n c r root l n c r root n c r root l n root l n root n root either value xapplresdir user home directory xapplresdir setset xuserfilesearchpath value default xt ignores xapplresdir altogethernotice quick dirty way making application find app defaults file current working directory set xapplresdirsingle dotr machinery worked differently r compatibilty many people set xapplresdir value dot followed slashorder callbacks executedcourtesy donna converse converse expo lcs mit edu intrinsics library guarantee orderwidget writer application writer ability modify entire contents callback listneither one currently knows intrinsics cannot guarantee order executionapplication programmer cannot rely widget writer widget writer required document widget add remove callbacks list effect therefore functionality contained callback independent functionality contained callbacks listeven though xt standard definition xtaddcallback callback_name specifies callback list procedure appendedmay infer word appended callback routines called order added callback listknow widget visiblecourtesy donna converse converse expo lcs mit edu right everything implemented correctlydemonstrates deficiency x protocol core widget reflecting capabilities protocoldeficiency information available one way case inconvenient wayxt specification accurate second third paragraphs section read section carefullyvisible field change response iconificationvisibilitynotify event received window goes viewable unviewable widget ancestor unmapped iconification occursprotocol deficiencyvisibility state viewable state specific meanings x protocol see glossary xlib x protocol reference manualsee window manager window managerapplication writer keep track global boolean action routine translations mapnotify unmapnotify shell widget contains custom widgetcustom widget writer see map_state field returned call xgetwindowattributessuggestionsreparent widget xt extreparentwidgetuse xtmalloc xtfree etcunfortunately code calls malloc realloc calloc tends ignore possibility returning nullbest handled something like ptr type malloc sizeof type ptr perror malloc xyzzy exit handle common case intrinsics define functions xtmalloc xtcalloc xtnew xtnewstring xtrealloc use standard c language functions malloc calloc realloc execute xterrormsg null value returnedxt error handlers supposed return effectively exitsaddition xtrealloc called null pointer uses xtmalloc get initial spaceallows code like ptr ptr type malloc sizeof type else ptr type realloc ptr sizeof type count count written ptr xtrealloc ptr sizeof ptr count also xtfree accepts null pointer argumentgenerally found xt functions conveniant usehowever anytime allocating anything potentially large use standard functions fully recover enough memory errorsxtnew xtnewstring conveniant macros allocating structure copying string struct abc xyzzy char ptr char str abcdef xyzzy xtnew struct abc takes care type casting ptr xtnewstring str strict interpretation intrinsics reference manual allow implementation provide functions exchangable malloc freeecode char ptr ptr xtmalloc free ptr may workpersonally call implementation broken complain vendorcommon error motif programmers use xtfree string really using xmstringfreedebug xt applicationfirst recomend getting purify pure softwaregreat package tracing memory problems sunbit pricey still recomendexcuse marketing blurb contact support pure com infopurify inserts additional checking instructions directly object code produced existing compilersinstructions check every memory read write performed program test detect several types access errors reading unitialized memory writing past malloc bounds writing freed memorypurify inserts checking logic code program including third party vendor object code libraries verifies system call interfacesaddition purify tracks memory usage identifies individual memory leaks using novel adaption garbage collection techniquespurify nearly comprehensive memory access checking slows target program typically factor two fivealternative package pricey sun runs many unix pretty similar features sentinel debugging environmentreplaces malloc several c library functions add additional checkscontact cpcahil virtech vti com info next getting sort xlib error need run synchronous mode easily accomplished sync command line argument setting variable xdebug debuggerset break point exitlet trace back original xlib function calledrun synchronous mode actual error may occured number calls xlib previously since xlib calls buffered replies server asynchronousnext trouble window layout use undocumented resource xtidentifywindows class resource xtdebug cause widget name identified windowexample example xload xrm xtdebug true example xwininfo tree click new xload window give normal information widget name class window includedhelp checking location size errant widgetsnext trouble geometry managers want test way widget manages children try export lcs mit edu contrib libxtgeo tar zacts filter children geometry manager checks behaviourclever ideaunfortunate problem debugging callback application executing grab keyboard mouse pulldown menuserver effectively locks need go another machine kill debugger manuallyserver locks application debugged said one else access keyboard application stopped waiting debugger waiting commandsunfortunately give input going application stoppedbest way debug kind problem two machines desk running program debugger environment one machine running application possibly using command sequence like othermachine xhost thismachine thismachine setenv display othermachine thismachine gdb application favorite debuggerothermachine xhost thismachine thismachine gdb application gdb set environment display othermachine gdb runbelieve codecenter c interpreter graphical debugger method dealing explicitely calling xlib functions release grabs breakpointsdebugging widget problems requires pretty good debugging skills knowledge widgets workgo long way without knowing internals particular widget far without understanding widget worksjudicious use conditional breakpoints adding print statements debugger help great dealxtaddinput xtaddtimeout xtaddworkproc workgot delicate problem three routines xtaddinput xtaddtimeout xtaddworkprocproblem use application seem registred properlymade handy little testprogram everything works perfect real application nothing happensintroduction r xtapp functions obsoleted routines see q changes r r rhappens use default application context different one may createdsince events timeouts distributed per application context basis using two application contexts get eventsexample cnt toplevel xtappinitialize app class desc xtnumber desc argc argv fallback args cnt xtaddtimeout xtaddworkproc xtappmainloop app would never invoke timeoutimplement drag dropcourtesy roger reynolds rogerr netcom com feb drag n drop buzzword moving data clients intuitive fashionmotif version supports drag n drop capabilities openlook supported n alongtwo protocols compatable far know publishedwrote package called rdd designed flexible public protocol drag n drop operations clientsintention provide tool would make easy people support standard drag n drop protocol programs develop contribute sell regardless widget set used long based xtimplementation based upon understanding icccm conventions details read codeheard dozens people using rdd like feel works whole lot better motif stuffalso seem many think neat constrained use motif anywaylatest rdd stuff available ftp netcom com pub rogerrpossibly older version also available export lcs mit edu contrib