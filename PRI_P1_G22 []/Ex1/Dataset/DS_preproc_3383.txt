got number requests codewritten x asmborland tasmtasm lga asm tlink lga asm code lga ncryption c nick nassuphis code segment assume cs code ds code org h start jmp begin gas particle assigment bit particle moving east bit particle moving west bit particle moving north bit particle moving south bit particle moving east bit particle moving west bit particle moving north bit particle moving south collisiong rulesgas rules e wn e w n ne w n e w nibbles bytesreflection rules swap bits along directions look table implements two particle collisions hpp lattice gas hpprule db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b rule implements velocity reversal needed run gas evolution reversecalled wallrule particles hit wall headwallrule db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b db b maxbyte equ lineno equ srcptr dw offset buffer desptr dw offset buffer savebuff db maxbyte lineno dup buffer db maxbyte lineno dup db dup buffer db maxbyte lineno dup db dup data db db db db test lattice gas based encryption db algorithmdata encoded particles db digital gas whose time evolution simulated db cellular automaton type algorithmdecryption db achieved running simulation reversedb thermodynamic argument ensures even single db bit flipped decryption data possible db db gas let evolve timesteps db one either run reverse evolution pressing db space flip bit run pressing db db cryptographic application key would consist db number time steps time location db specific bit inversionsdb db db db db fill gas piece code initgas mov di cs srcptr mov si offset data mov cx lineno ig push di push cx mov cx maxbyte ig mov al cs si mov cs di al inc si inc di loop ig pop cx pop di add di maxbyte loop ig mov si cs srcptr mov di offset initgas mov cx maxbyte mov al lg mov byte ptr cs si al al inc si loop lg ret display gas molecules bouncing around showgas push es push si push di push cx push bx mov ax bh mov es ax mov si cs srcptr mov di mov cx lineno add si maxbyte sg push cx push di mov cx maxbyte sg mov al cs si mov byte ptr es di al inc si add di dec cx jnz sg pop di pop cx add di loop sg pop bx pop cx pop di pop si pop es ret cs si sourse data cs di destination data scanonemiddleline first byte special case warparound mov bl al assembled bytemov bh cs si maxbyte north one line lower bh b bits bl bh assembled byte mov bh cs si maxbyte south one line higher bh b bits bl bh place stuff al mov bh cs si maxbyte west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di middle bytes handled loop mov cx maxbyte sol mov bl al assembled bytemov bh cs si maxbyte north one line lower bh b bits bl bh assembled byte mov bh cs si maxbyte south one line higher bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di loop sol last byte also special mov bl al assembled bytemov bh cs si maxbyte north one line lower bh b bits bl bh assembled byte mov bh cs si maxbyte south one line higher bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si maxbyte east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di ret cs si sourse data cs di destination data scanfirstline first byte special case warparound mov bl mov bh cs si maxbyte lineno bh b bits bl bh assembled byte mov bh cs si maxbyte bh b bits bl bh place stuff al mov bh cs si maxbyte west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di middle bytes handled loop mov cx maxbyte sfl mov bl al assembled bytemov bh cs si maxbyte lineno bh b bits bl bh assembled byte mov bh cs si maxbyte bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di loop sfl last byte also special mov bl al assembled bytemov bh cs si maxbyte lineno bh b bits bl bh assembled byte mov bh cs si maxbyte bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si maxbyte east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al ret cs si sourse data cs di destination data scanlastline first byte special case warparound mov bl al assembled bytemov bh cs si maxbyte bh b bits bl bh assembled byte mov bh cs si maxbyte lineno bh b bits bl bh place stuff al mov bh cs si maxbyte west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di middle bytes handled loop mov cx maxbyte sll mov bl al assembled bytemov bh cs si maxbyte bh b bits bl bh assembled byte mov bh cs si maxbyte lineno bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di loop sll last byte also special mov bl al assembled bytemov bh cs si maxbyte bh b bits bl bh assembled byte mov bh cs si maxbyte lineno bh b bits bl bh place stuff al mov bh cs si west one byte left lower bh b bits bl bh mov bh cs si maxbyte east one byte right higher bh b bits bl bh mov bh mov al byte ptr cs bx offset hpprule mov cs di al inc si inc di ret invert velocities gas invertall push bx push cx push si mov si cs srcptr mov bx mov cx lineno ia push cx mov cx maxbyte ia mov bl cs si mov al byte ptr cs bx offset wallrule mov cs si al inc si loop ia pop cx loop ia pop si pop cx pop bx ret iterateonce mov si cs srcptr mov di cs desptr mov cs srcptr di mov cs desptr si push si push di call scanfirstline pop di pop si add si maxbyte add di maxbyte mov cx lineno dont scan first last l push si push di push cx call scanonemiddleline pop cx pop di pop si add si maxbyte add di maxbyte loop l push si push di call scanlastline pop si pop di l ret iterate hpp rule cx times iterate push cx call iterateonce pop cx call showgas loop iterate ret iterate hpp rule cx times iterateuntil mov si mov cx offset iu offset iu iu mov al byte ptr cs si offset iu xor byte ptr cs si offset iu al inc si loop iu iu call iterateonce call showgas mov si cs srcptr mov cx maxbyte mov bx mov ah mov al iu mov bl byte ptr cs si mov dl byte ptr cs bx wallrule ah xor dl ah al dl inc si loop iu mov si mov cx offset iu offset iu iu mov ah byte ptr cs si offset iu ah al xor byte ptr cs si offset iu ah inc si loop iu jmp iu iu mov ax offset iu push ax ret db dup h iu push ax push bx push cx push dx push ds mov ah mov dx cs msgptr int h pop ds pop dx pop cx pop bx pop ax ret db dup h msgptr dw offset msg msg db message printed db code decrypted using data lattice db applied decoding routine db every time step db decoding function left code unchanged db except gas evolution completelly db reversed thermalization times equ repetitions enough equilibrate gas begin mov ax h mov bh mov dh mov dl mov cx int h mov ah mov bh mov dh mov dl int h call initgas call showgas mov ah int h push cx mov cx times call iterate call invertall call showgas mov ah int h cmp al jne begin mov si cs srcptr xor byte ptr cs si b begin mov cx times call iterateuntil call invertall call showgas mov ax ch int h